{% extends 'base.html.twig' %}

{% block title %}Modifier mon profil{% endblock %}

{% block stylesheets %}
<style>
:root{
  --bg-primary:#2B2D31; --bg-media:#1E1F22; --line:#3F4147;
  --text:#DBDEE1; --muted:#B5BAC1;
}

/* Style sombre pour les cartes */
.card {
  background: var(--bg-primary) !important;
  border: 1px solid var(--line) !important;
  color: var(--text) !important;
}

.card-header {
  background: var(--bg-primary) !important;
  border-bottom: 1px solid var(--line) !important;
  color: var(--text) !important;
}

.text-muted {
  color: var(--muted) !important;
}

/* Formulaires avec style sombre */
.form-control {
  background: #29292d !important;
  border: 1px solid var(--line) !important;
  color: var(--text) !important;
}

.form-control:focus {
  background: #29292d !important;
  border-color: #757302 !important;
  color: var(--text) !important;
  box-shadow: 0 0 0 0.2rem rgba(117, 115, 2, 0.25) !important;
}

.form-control::placeholder {
  color: var(--muted) !important;
}

.input-group-text {
  background: #29292d !important;
  border: 1px solid var(--line) !important;
  color: var(--text) !important;
}

.form-label {
  color: var(--text) !important;
}

.form-text {
  color: var(--muted) !important;
}

/* Boutons avec la couleur yellow */
.btn-success {
  background: #757302 !important;
  border-color: #757302 !important;
  color: #fff !important;
}

.btn-success:hover {
  background: #5a5a02 !important;
  border-color: #5a5a02 !important;
  color: #fff !important;
}

.btn-danger {
  background: #dc3545 !important;
  border-color: #dc3545 !important;
}

.btn-danger:hover {
  background: #c82333 !important;
  border-color: #bd2130 !important;
}

/* Alerts avec style adapté */
.alert-danger {
  background: rgba(220, 53, 69, 0.2) !important;
  border-color: #dc3545 !important;
  color: #f8d7da !important;
}

.alert-success {
  background: rgba(25, 135, 84, 0.2) !important;
  border-color: #198754 !important;
  color: #d1e7dd !important;
}

.invalid-feedback {
  color: #dc3545 !important;
}
</style>
{% endblock %}

{% block body %}
<div class="container py-5">
  <div class="row justify-content-center">
    <div class="col-lg-8">
      <div class="card border-0 shadow-sm rounded-4">
        <!-- Header -->
        <div class="card-header bg-white border-0 p-4">
          <div class="d-flex align-items-center gap-3">
            <div class="rounded-circle bg-primary bg-opacity-10 text-primary d-flex align-items-center justify-content-center" style="width:56px;height:56px;">
              <i class="fas fa-user-edit"></i>
            </div>
            <div>
              <h2 class="h4 mb-1">Modifier mon profil</h2>
              <div class="text-muted small">Mettez à jour vos informations personnelles</div>
            </div>
          </div>
        </div>

        <!-- Body -->
        <div class="card-body p-4">
          {% for flash_error in app.flashes('error') %}
            <div class="alert alert-danger mb-3" role="alert">{{ flash_error }}</div>
          {% endfor %}

          {# Alerte globale si le formulaire a des erreurs #}
          {% if profileForm.vars.submitted and not profileForm.vars.valid %}
            <div class="alert alert-danger mb-4" role="alert">
              Oups… des erreurs se sont glissées dans le formulaire. Merci de corriger les champs en rouge.
            </div>
          {% endif %}

          {{ form_start(profileForm) }}

            {# Email #}
            {% set emailHasErrors = profileForm.email.vars.errors|length > 0 %}
            <div class="mb-3">
              {{ form_label(profileForm.email, 'Adresse e-mail', {'label_attr': {'class': 'form-label'}}) }}
              <div class="input-group">
                <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                {{ form_widget(profileForm.email, {
                  attr: {
                    class: 'form-control' ~ (emailHasErrors ? ' is-invalid' : ''),
                    placeholder: 'votre@email.com'
                  }
                }) }}
              </div>
              {% if emailHasErrors %}
                <div class="invalid-feedback d-block">
                  {{ form_errors(profileForm.email) }}
                </div>
              {% else %}
                <div class="form-text">Nous n’affichons jamais votre email publiquement.</div>
              {% endif %}
            </div>

            {# Adresse #}
            {% set addressHasErrors = profileForm.address.vars.errors|length > 0 %}
            <div class="mb-3">
              {{ form_label(profileForm.address, 'Adresse de facturation', {'label_attr': {'class': 'form-label'}}) }}
              <div class="input-group">
                <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                {{ form_widget(profileForm.address, {
                  attr: {
                    class: 'form-control' ~ (addressHasErrors ? ' is-invalid' : ''),
                    placeholder: 'Votre adresse de facturation complète',
                    list: 'address-suggestions',
                    autocomplete: 'off'
                  }
                }) }}
              </div>
              <datalist id="address-suggestions"></datalist>
              {% if addressHasErrors %}
                <div class="invalid-feedback d-block">
                  {{ form_errors(profileForm.address) }}
                </div>
              {% else %}
                <div class="form-text">Optionnel — utilisez l’autocomplétion pour gagner du temps.</div>
              {% endif %}
            </div>

            {# Nouveau mot de passe #}
            {% set passwordHasErrors =
              profileForm.newPassword.vars.errors|length > 0
              or profileForm.newPassword.first.vars.errors|length > 0
              or profileForm.newPassword.second.vars.errors|length > 0
            %}
            <div class="mb-3">
              {{ form_label(profileForm.newPassword.first, 'Nouveau mot de passe', {'label_attr': {'class': 'form-label'}}) }}
              <div class="input-group">
                <span class="input-group-text"><i class="fas fa-lock"></i></span>
                {{ form_widget(profileForm.newPassword.first, {
                  attr: {
                    class: 'form-control' ~ (passwordHasErrors ? ' is-invalid' : ''),
                    placeholder: 'Laissez vide pour conserver l’actuel'
                  }
                }) }}
              </div>
              {% if passwordHasErrors %}
                <div class="invalid-feedback d-block">
                  {{ form_errors(profileForm.newPassword.first) }}
                  {{ form_errors(profileForm.newPassword) }}
                </div>
              {% else %}
                <div class="form-text">Au moins 8 caractères. Laissez vide pour ne pas changer.</div>
              {% endif %}
            </div>

            {# Confirmation du nouveau mot de passe #}
            <div class="mb-4">
              {{ form_label(profileForm.newPassword.second, 'Confirmez le nouveau mot de passe', {'label_attr': {'class': 'form-label'}}) }}
              <div class="input-group">
                <span class="input-group-text"><i class="fas fa-check"></i></span>
                {{ form_widget(profileForm.newPassword.second, {
                  attr: {
                    class: 'form-control' ~ (passwordHasErrors ? ' is-invalid' : ''),
                    placeholder: 'Confirmez le nouveau mot de passe'
                  }
                }) }}
              </div>
              {% if profileForm.newPassword.second.vars.errors|length > 0 %}
                <div class="invalid-feedback d-block">
                  {{ form_errors(profileForm.newPassword.second) }}
                </div>
              {% endif %}
            </div>

            <div class="d-flex flex-wrap gap-2">
              <button type="submit" class="btn btn-success">
                <i class="fas fa-save me-2"></i>Enregistrer les modifications
              </button>
              <a href="{{ path('app_account') }}" class="btn btn-danger">
                <i class="fas fa-times me-2"></i>Annuler
              </a>
            </div>

          {{ form_end(profileForm) }}
        </div>
      </div>
    </div>
  </div>
</div>
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  {# on conserve EXACTEMENT ton script d’autocomplétion #}
  <script>
    (function() {
      const input = document.getElementById('{{ profileForm.address.vars.id }}');
      const datalist = document.getElementById('address-suggestions');
      if (!input || !datalist) return;

      input.addEventListener('input', function () {
        const query = this.value;
        if (query.length < 3) {
          datalist.innerHTML = '';
          return;
        }
        fetch('https://api-adresse.data.gouv.fr/search/?limit=5&q=' + encodeURIComponent(query))
          .then(response => response.json())
          .then(data => {
            datalist.innerHTML = '';
            (data.features || []).forEach(feature => {
              const option = document.createElement('option');
              option.value = feature.properties.label;
              datalist.appendChild(option);
            });
          })
          .catch(err => console.error('Erreur API Adresse:', err));
      });
    })();
  </script>
{% endblock %}
